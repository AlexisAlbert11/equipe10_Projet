#import coordinates as co
### Ne pas rouler ceci ###
#fichier_excel = "C:\\equipe10_Projet\\Data.xlsx"  # Chemin corrigé avec double backslash
#coords = co.Coordinates(fichier_excel=fichier_excel)
#coords.create_distance_matrix(fichier_excel)
import fastroute_problem as frp
import frp_ampl_mip_solver as frp_solver
import bus
import élève_solution as élève
import busfleet_bus as bfleet
import Final_solution as final
# Définir les données pour chaque instance

# Matrice pour Coor_inst1
dist_matrix1 = [
    [0.0, 4.18, 2.16, 5.92, 7.3, 2.33, 5.03, 5.78, 3.42, 7.54, 5.75, 5.98, 3.6, 7.3, 9.41, 4.58, 7.2, 5.73, 8.02, 7.93, 6.05, 6.32, 3.79, 7.62, 7.28, 3.69, 6.38, 5.49, 2.33],
    [4.18, 0.0, 6.44, 8.34, 4.5, 4.68, 9.0, 2.43, 8.18, 4.75, 10.53, 2.68, 6.02, 7.27, 6.61, 6.52, 8.03, 2.2, 10.03, 5.13, 10.38, 2.48, 6.21, 7.59, 4.48, 5.82, 8.98, 2.8, 5.83],
    [2.16, 6.44, 0.0, 7.5, 11.64, 2.73, 6.6, 6.09, 5.0, 8.0, 7.33, 7.04, 4.67, 7.65, 9.86, 5.64, 9.57, 6.26, 8.42, 8.38, 7.62, 7.38, 4.86, 8.37, 7.73, 4.08, 6.8, 6.12, 2.6],
    [5.92, 8.34, 7.5, 0.0, 7.74, 8.01, 0.99, 10.98, 4.22, 6.19, 2.87, 10.42, 8.81, 1.06, 9.84, 9.79, 1.53, 9.94, 13.36, 6.57, 3.12, 10.38, 9.0, 1.79, 7.71, 9.72, 1.0, 11.65, 5.04],
    [7.3, 4.5, 11.64, 7.74, 0.0, 6.08, 7.24, 5.89, 9.11, 2.08, 10.34, 5.33, 7.31, 5.9, 3.9, 8.28, 7.85, 4.85, 11.79, 2.46, 10.2, 5.29, 7.5, 6.21, 0.25, 6.6, 7.38, 6.17, 7.93],
    [2.33, 4.68, 2.73, 8.01, 6.08, 0.0, 6.81, 4.78, 5.29, 6.32, 7.62, 4.97, 3.24, 8.47, 8.18, 4.22, 8.36, 4.72, 6.01, 6.7, 10.71, 5.64, 3.44, 8.78, 6.05, 1.68, 7.09, 4.58, 2.9],
    [5.03, 9.0, 6.6, 0.99, 7.24, 6.81, 0.0, 10.7, 3.34, 6.35, 1.98, 10.14, 8.53, 1.23, 9.54, 9.51, 0.97, 9.66, 13.08, 6.74, 2.27, 10.1, 8.72, 1.95, 7.43, 9.52, 0.58, 12.31, 4.15],
    [5.78, 2.43, 6.09, 10.98, 5.89, 4.78, 10.7, 0.0, 9.99, 7.19, 12.67, 1.72, 5.36, 9.42, 7.03, 6.33, 10.18, 0.7, 9.95, 7.48, 12.53, 2.32, 5.55, 9.73, 4.94, 5.34, 10.62, 1.7, 6.26],
    [3.42, 8.18, 5.0, 4.22, 9.11, 5.29, 3.34, 9.99, 0.0, 9.15, 3.32, 11.18, 11.27, 4.38, 11.01, 8.13, 4.13, 10.16, 10.9, 9.53, 3.62, 10.41, 7.35, 5.11, 8.88, 6.64, 3.61, 11.38, 2.55],
    [7.54, 4.75, 8.0, 6.19, 2.08, 6.32, 6.35, 7.19, 9.15, 0.0, 8.7, 7.01, 11.51, 5.12, 4.36, 7.5, 6.2, 7.37, 11.01, 0.66, 8.55, 6.96, 6.72, 5.43, 2.07, 6.84, 6.28, 8.27, 8.17],
    [5.75, 10.53, 7.33, 2.87, 10.34, 7.62, 1.98, 12.67, 3.32, 8.7, 0.0, 11.54, 9.94, 3.02, 10.97, 15.07, 2.77, 11.06, 14.48, 9.49, 0.52, 11.5, 10.13, 3.75, 8.84, 11.05, 2.26, 13.84, 4.87],
    [5.98, 2.68, 7.04, 10.42, 5.33, 4.97, 10.14, 1.72, 11.18, 7.01, 11.54, 0.0, 5.77, 9.76, 8.48, 6.74, 11.38, 1.45, 10.36, 8.68, 13.73, 1.99, 5.96, 10.93, 6.14, 5.54, 10.06, 2.89, 7.21],
    [3.6, 6.02, 4.67, 8.81, 7.31, 3.24, 8.53, 5.36, 11.27, 11.51, 9.94, 5.77, 0.0, 13.65, 13.37, 7.83, 13.54, 7.34, 11.98, 11.89, 15.89, 7.23, 0.19, 13.97, 11.24, 1.35, 8.45, 5.39, 4.83],
    [7.3, 7.27, 7.65, 1.06, 5.9, 8.47, 1.23, 9.42, 4.38, 5.12, 3.02, 9.76, 13.65, 0.0, 9.18, 12.68, 1.68, 9.28, 12.7, 5.51, 3.27, 9.72, 8.35, 0.72, 7.05, 8.66, 1.15, 10.59, 5.19],
    [9.41, 6.61, 9.86, 9.84, 3.9, 8.18, 9.54, 7.03, 11.01, 4.36, 10.97, 8.48, 13.37, 9.18, 0.0, 15.96, 8.57, 7.47, 13.56, 4.4, 10.92, 7.35, 13.18, 8.13, 3.94, 8.7, 9.48, 8.2, 10.03],
    [4.58, 6.52, 5.64, 9.79, 8.28, 4.22, 9.51, 6.33, 8.13, 7.5, 15.07, 6.74, 7.83, 12.68, 15.96, 0.0, 12.57, 6.37, 11.01, 14.48, 14.92, 6.26, 8.03, 12.99, 13.83, 2.33, 9.43, 6.42, 5.81],
    [7.2, 8.03, 9.57, 1.53, 7.85, 8.36, 0.97, 10.18, 4.13, 6.2, 2.77, 11.38, 13.54, 1.68, 8.57, 12.57, 0.0, 10.35, 12.23, 7.23, 2.0, 9.25, 13.35, 2.31, 6.58, 8.55, 0.62, 11.34, 4.94],
    [5.73, 2.2, 6.26, 9.94, 4.85, 4.72, 9.66, 0.7, 10.16, 7.37, 11.06, 1.45, 7.34, 9.28, 7.47, 6.37, 10.35, 0.0, 10.36, 7.66, 12.7, 2.02, 5.96, 9.91, 5.12, 5.29, 9.58, 1.87, 6.43],
    [8.02, 10.03, 8.42, 13.36, 11.79, 6.01, 13.08, 9.95, 10.9, 11.01, 14.48, 10.36, 11.98, 12.7, 13.56, 11.01, 12.23, 10.36, 0.0, 11.44, 15.45, 10.05, 6.3, 13.52, 10.79, 10.31, 13.0, 9.93, 8.59],
    [7.93, 5.13, 8.38, 6.57, 2.46, 6.7, 6.74, 7.48, 9.53, 0.66, 9.49, 8.68, 11.89, 5.51, 4.4, 14.48, 7.23, 7.66, 11.44, 0.0, 9.34, 7.35, 11.7, 5.81, 2.45, 7.22, 6.66, 8.65, 8.55],
    [6.05, 10.38, 7.62, 3.12, 10.2, 10.71, 2.27, 12.53, 3.62, 8.55, 0.52, 13.73, 15.89, 3.27, 10.92, 14.92, 2.0, 12.7, 15.45, 9.34, 0.0, 11.36, 15.7, 4.04, 8.69, 10.9, 2.77, 13.69, 5.17],
    [6.32, 2.48, 7.38, 10.38, 5.29, 5.64, 10.1, 2.32, 10.41, 6.96, 11.5, 1.99, 7.23, 9.72, 7.35, 6.26, 9.25, 2.02, 10.05, 7.35, 11.36, 0.0, 7.04, 10.85, 5.23, 5.88, 10.02, 3.49, 7.55],
    [3.79, 6.21, 4.86, 9.0, 7.5, 3.44, 8.72, 5.55, 7.35, 6.72, 10.13, 5.96, 0.19, 8.35, 13.18, 8.03, 13.35, 5.96, 6.3, 11.7, 15.7, 7.04, 0.0, 13.77, 11.05, 1.54, 8.64, 5.64, 5.02],
    [7.62, 7.59, 8.37, 1.79, 6.21, 8.78, 1.95, 9.73, 5.11, 5.43, 3.75, 10.93, 13.97, 0.72, 8.13, 12.99, 2.31, 9.91, 13.52, 5.81, 4.04, 10.85, 13.77, 0.0, 6.19, 8.97, 1.87, 10.9, 5.92],
    [7.28, 4.48, 7.73, 7.71, 0.25, 6.05, 7.43, 4.94, 8.88, 2.07, 8.84, 6.14, 11.24, 7.05, 3.94, 13.83, 6.58, 5.12, 10.79, 2.45, 8.69, 5.23, 11.05, 6.19, 0.0, 6.57, 7.36, 6.11, 7.9],
    [3.69, 5.82, 4.08, 9.72, 6.6, 1.68, 9.52, 5.34, 6.64, 6.84, 11.05, 5.54, 1.35, 8.66, 8.7, 2.33, 8.55, 5.29, 10.31, 7.22, 10.9, 5.88, 1.54, 8.97, 6.57, 0.0, 9.1, 7.96, 5.0],
    [6.38, 8.98, 6.8, 1.0, 7.38, 7.09, 0.58, 10.62, 3.61, 6.28, 2.26, 10.06, 8.45, 1.15, 9.48, 9.43, 0.62, 9.58, 13.0, 6.66, 2.77, 10.02, 8.64, 1.87, 7.36, 9.1, 0.0, 11.89, 4.43],
    [5.49, 2.8, 6.12, 11.65, 6.17, 4.58, 12.31, 1.7, 11.38, 8.27, 13.84, 2.89, 5.39, 10.59, 8.2, 6.42, 11.34, 1.87, 9.93, 8.65, 13.69, 3.49, 5.64, 10.9, 6.11, 7.96, 11.89, 0.0, 6.17],
    [2.33, 5.83, 2.6, 5.04, 7.93, 2.9, 4.15, 6.26, 2.55, 8.17, 4.87, 7.21, 4.83, 5.19, 10.03, 5.81, 4.94, 6.43, 8.59, 8.55, 5.17, 7.55, 5.02, 5.92, 7.9, 5.0, 4.43, 6.17, 0.0]
]

# Matrice pour Coor_inst2
dist_matrix2 = [
    [0.0, 3.34, 2.16, 1.73, 8.25, 3.33, 4.13, 5.15, 8.75, 6.06, 4.8, 5.42, 7.26, 5.92, 6.47, 4.5, 4.84, 5.94, 7.74, 6.55, 5.4, 6.73, 3.58, 5.76, 7.21, 3.42, 5.1, 4.41, 8.59],
    [3.34, 0.0, 5.6, 5.6, 4.69, 4.72, 8.16, 3.17, 9.91, 5.66, 11.01, 3.43, 8.43, 7.94, 3.27, 5.6, 8.75, 3.96, 8.9, 4.73, 10.71, 4.74, 4.69, 7.19, 4.01, 4.01, 9.24, 2.45, 9.17],
    [2.16, 5.6, 0.0, 3.89, 11.77, 3.73, 5.71, 6.22, 9.15, 8.44, 6.38, 6.48, 7.66, 7.5, 6.92, 5.56, 6.42, 7.01, 8.14, 8.93, 6.98, 7.79, 4.65, 7.33, 7.67, 3.82, 6.67, 5.04, 8.99],
    [1.73, 5.6, 3.89, 0.0, 7.63, 5.05, 3.63, 6.88, 10.6, 7.8, 4.29, 8.85, 9.11, 5.41, 6.21, 6.22, 4.34, 9.38, 9.59, 7.67, 4.87, 10.16, 5.31, 5.25, 6.95, 5.15, 4.67, 6.14, 10.32],
    [8.25, 4.69, 11.77, 7.63, 0.0, 7.06, 6.63, 5.21, 13.44, 1.03, 7.58, 4.44, 11.95, 5.73, 3.54, 9.12, 6.15, 4.97, 12.43, 3.91, 11.06, 6.33, 8.21, 4.98, 2.5, 6.96, 6.38, 5.48, 12.12],
    [3.33, 4.72, 3.73, 5.05, 7.06, 0.0, 7.2, 4.55, 5.42, 7.63, 12.14, 4.81, 3.93, 9.93, 5.64, 2.66, 9.88, 5.34, 4.41, 7.1, 11.84, 6.12, 1.75, 9.18, 6.38, 0.1, 8.87, 4.16, 5.06],
    [4.13, 8.16, 5.71, 3.63, 6.63, 7.2, 0.0, 10.82, 14.54, 5.6, 2.17, 11.09, 13.06, 1.82, 7.03, 10.16, 0.64, 11.61, 13.53, 5.49, 2.39, 13.01, 9.25, 1.66, 8.11, 7.1, 1.07, 12.14, 12.26],
    [5.15, 3.17, 6.22, 6.88, 5.21, 4.55, 10.82, 0.0, 9.45, 6.43, 12.72, 1.39, 7.96, 10.52, 6.23, 5.88, 10.46, 1.91, 8.44, 7.72, 12.42, 2.7, 4.11, 9.76, 5.23, 4.44, 10.57, 1.61, 9.61],
    [8.75, 9.91, 9.15, 10.6, 13.44, 5.42, 14.54, 9.45, 0.0, 12.41, 16.09, 9.87, 1.81, 15.0, 11.68, 7.72, 14.94, 10.4, 1.01, 12.16, 16.9, 11.19, 6.81, 14.24, 11.45, 5.53, 14.29, 9.58, 0.0],
    [6.06, 5.66, 8.44, 7.8, 1.03, 7.63, 5.6, 6.43, 12.41, 0.0, 7.77, 7.39, 10.92, 4.7, 3.83, 11.52, 5.12, 5.94, 11.4, 2.88, 6.77, 7.3, 7.18, 3.94, 3.4, 7.52, 5.34, 6.39, 12.69],
    [4.8, 11.01, 6.38, 4.29, 7.58, 12.14, 2.17, 12.72, 16.09, 7.77, 0.0, 12.63, 15.71, 2.76, 8.9, 11.7, 1.42, 13.15, 15.07, 6.44, 1.1, 14.55, 10.79, 2.6, 9.65, 12.03, 2.02, 13.92, 17.2],
    [5.42, 3.43, 6.48, 8.85, 4.44, 4.81, 11.09, 1.39, 9.87, 7.39, 12.63, 0.0, 8.92, 10.63, 7.19, 5.44, 10.61, 0.53, 9.39, 8.68, 13.38, 1.57, 5.06, 10.72, 6.19, 4.71, 10.83, 1.87, 9.87],
    [7.26, 8.43, 7.66, 9.11, 11.95, 3.93, 13.06, 7.96, 1.81, 10.92, 15.71, 8.92, 0.0, 13.51, 9.22, 6.24, 13.45, 8.91, 0.81, 10.68, 15.41, 9.7, 5.33, 12.76, 9.96, 4.04, 12.8, 8.1, 1.81],
    [5.92, 7.94, 7.5, 5.41, 5.73, 9.93, 1.82, 10.52, 15.0, 4.7, 2.76, 10.63, 13.51, 0.0, 6.9, 9.7, 1.34, 11.15, 13.07, 4.59, 2.99, 12.55, 8.79, 0.75, 7.64, 9.83, 1.56, 10.85, 15.0],
    [6.47, 3.27, 6.92, 6.21, 3.54, 5.64, 7.03, 6.23, 11.68, 3.83, 8.9, 7.19, 9.22, 6.9, 0.0, 7.37, 6.55, 6.97, 10.67, 1.63, 9.23, 9.09, 10.45, 5.38, 0.92, 5.54, 7.11, 5.69, 10.7],
    [4.5, 5.6, 5.56, 6.22, 9.12, 2.66, 10.16, 5.88, 7.72, 11.52, 11.7, 5.44, 6.24, 9.7, 7.37, 0.0, 13.77, 5.77, 10.8, 14.56, 15.73, 6.36, 7.89, 13.07, 13.85, 2.56, 9.91, 5.26, 7.72],
    [4.84, 8.75, 6.42, 4.34, 6.15, 9.88, 0.64, 10.46, 14.94, 5.12, 1.42, 10.61, 13.45, 1.34, 6.55, 13.77, 0.0, 11.13, 13.05, 5.17, 1.65, 12.53, 8.77, 1.18, 7.62, 9.77, 0.59, 11.66, 14.94],
    [5.94, 3.96, 7.01, 9.38, 4.97, 5.34, 11.61, 1.91, 10.4, 5.94, 13.15, 0.53, 8.91, 11.15, 6.97, 5.77, 11.13, 0.0, 9.39, 8.31, 12.86, 2.39, 4.55, 10.21, 5.67, 5.23, 11.36, 2.4, 10.4],
    [7.74, 8.9, 8.14, 9.59, 12.43, 4.41, 13.53, 8.44, 1.01, 11.4, 15.07, 9.39, 0.81, 13.07, 10.67, 10.8, 13.05, 9.39, 0.0, 11.24, 15.89, 9.81, 5.8, 13.23, 10.44, 4.51, 13.28, 8.57, 1.01],
    [6.55, 4.73, 8.93, 7.67, 3.91, 7.1, 5.49, 7.72, 12.16, 2.88, 6.44, 8.68, 10.68, 4.59, 1.63, 14.56, 5.17, 8.31, 11.24, 0.0, 7.84, 9.66, 11.91, 3.99, 2.37, 7.0, 5.24, 7.68, 12.16],
    [5.4, 10.71, 6.98, 4.87, 11.06, 11.84, 2.39, 12.42, 16.9, 6.77, 1.1, 13.38, 15.41, 2.99, 9.23, 15.73, 1.65, 12.86, 15.89, 7.84, 0.0, 14.26, 16.64, 2.83, 10.74, 11.74, 2.24, 13.62, 16.9],
    [6.73, 4.74, 7.79, 10.16, 6.33, 6.12, 13.01, 2.7, 11.19, 7.3, 14.55, 1.57, 9.7, 12.55, 9.09, 6.36, 12.53, 2.39, 9.81, 9.66, 14.26, 0.0, 7.27, 11.14, 6.61, 6.02, 12.76, 3.18, 11.19],
    [3.58, 4.69, 4.65, 5.31, 8.21, 1.75, 9.25, 4.11, 6.81, 7.18, 10.79, 5.06, 5.33, 8.79, 10.45, 7.89, 8.77, 4.55, 5.8, 11.91, 16.64, 7.27, 0.0, 13.98, 11.2, 1.65, 9.0, 4.35, 6.81],
    [5.76, 7.19, 7.33, 5.25, 4.98, 9.18, 1.66, 9.76, 14.24, 3.94, 2.6, 10.72, 12.76, 0.75, 5.38, 13.07, 1.18, 10.21, 13.23, 3.99, 2.83, 11.14, 13.98, 0.0, 6.12, 9.08, 1.4, 10.1, 14.24],
    [7.21, 4.01, 7.67, 6.95, 2.5, 6.38, 8.11, 5.23, 11.45, 3.4, 9.65, 6.19, 9.96, 7.64, 0.92, 13.85, 7.62, 5.67, 10.44, 2.37, 10.74, 6.61, 11.2, 6.12, 0.0, 6.28, 7.85, 5.18, 11.45],
    [3.42, 4.01, 3.82, 5.15, 6.96, 0.1, 7.1, 4.44, 5.53, 7.52, 12.03, 4.71, 4.04, 9.83, 5.54, 2.56, 9.77, 5.23, 4.51, 7.0, 11.74, 6.02, 1.65, 9.08, 6.28, 0.0, 10.0, 4.06, 5.17],
    [5.1, 9.24, 6.67, 4.67, 6.38, 8.87, 1.07, 10.57, 14.29, 5.34, 2.02, 10.83, 12.8, 1.56, 7.11, 9.91, 0.59, 11.36, 13.28, 5.24, 2.24, 12.76, 9.0, 1.4, 7.85, 10.0, 0.0, 11.88, 14.29],
    [4.41, 2.45, 5.04, 6.14, 5.48, 4.16, 12.14, 1.61, 9.58, 6.39, 13.92, 1.87, 8.1, 10.85, 5.69, 5.26, 11.66, 2.4, 8.57, 7.68, 13.62, 3.18, 4.35, 10.1, 5.18, 4.06, 11.88, 0.0, 9.58],
    [8.59, 9.17, 8.99, 10.32, 12.12, 5.06, 12.26, 9.61, 0.0, 12.69, 17.2, 9.87, 1.81, 15.0, 10.7, 7.72, 14.94, 10.4, 1.01, 12.16, 16.9, 11.19, 6.81, 14.24, 11.45, 5.17, 14.29, 9.58, 0.0]
]

# Matrice pour Coor_inst3
dist_matrix3 = [
    [0.0, 5.22, 1.8, 2.37, 7.3, 7.72, 5.11, 4.99, 7.91, 6.99, 4.8, 4.89, 6.18, 5.55, 9.73, 3.53, 5.64, 5.48, 7.74, 7.45, 5.37, 5.21, 3.8, 7.62, 7.26, 5.17, 5.02, 3.36, 8.59],
    [5.22, 0.0, 7.02, 4.29, 3.47, 9.28, 8.02, 3.06, 10.2, 3.93, 10.37, 3.91, 8.48, 6.76, 5.89, 5.83, 9.6, 3.46, 10.03, 3.62, 10.28, 2.65, 6.03, 6.55, 3.43, 6.26, 7.46, 1.08, 9.71],
    [1.8, 7.02, 0.0, 3.98, 11.28, 7.76, 6.32, 5.55, 7.95, 7.86, 6.02, 6.09, 6.22, 6.77, 9.82, 3.57, 6.86, 5.74, 7.78, 7.54, 6.59, 7.19, 4.5, 8.01, 7.36, 5.21, 6.22, 5.25, 8.63],
    [2.37, 4.29, 3.98, 0.0, 6.59, 11.83, 3.82, 6.96, 10.76, 6.83, 3.9, 7.81, 9.04, 4.65, 8.8, 5.85, 4.74, 7.36, 10.6, 6.52, 4.47, 7.28, 6.53, 5.9, 6.33, 9.2, 4.2, 5.37, 11.53],
    [7.3, 3.47, 11.28, 6.59, 0.0, 11.49, 7.65, 6.08, 11.67, 2.3, 11.22, 4.34, 9.95, 6.42, 4.22, 7.3, 10.45, 5.8, 11.51, 1.99, 11.12, 4.69, 7.5, 6.21, 0.04, 8.09, 7.42, 5.15, 11.54],
    [7.72, 9.28, 7.76, 11.83, 11.49, 0.0, 18.62, 16.57, 9.16, 15.75, 20.62, 14.39, 8.5, 17.87, 17.71, 8.38, 19.85, 14.04, 8.99, 15.44, 20.52, 14.74, 10.36, 17.66, 11.45, 1.66, 12.73, 7.87, 6.52],
    [5.11, 8.02, 6.32, 3.82, 7.65, 18.62, 0.0, 12.63, 13.48, 5.71, 1.21, 9.68, 11.76, 1.23, 10.41, 9.11, 1.21, 11.13, 13.32, 6.78, 2.44, 10.02, 9.25, 2.48, 7.94, 11.42, 0.77, 10.05, 15.2],
    [4.99, 3.06, 5.55, 6.96, 6.08, 16.57, 12.63, 0.0, 9.73, 8.83, 14.63, 2.41, 8.01, 11.02, 8.04, 5.36, 13.86, 1.51, 9.56, 8.08, 14.53, 2.93, 5.56, 10.81, 6.04, 9.36, 10.16, 1.64, 10.09],
    [7.91, 10.2, 7.95, 10.76, 11.67, 9.16, 13.48, 9.73, 0.0, 11.1, 15.24, 9.56, 2.49, 13.61, 13.12, 4.01, 15.59, 9.18, 0.17, 10.84, 16.26, 10.1, 6.19, 13.4, 10.65, 10.82, 12.92, 9.09, 0.84],
    [6.99, 3.93, 7.86, 6.83, 2.3, 15.75, 5.71, 8.83, 11.1, 0.0, 6.87, 6.22, 9.37, 4.48, 4.88, 6.72, 7.65, 7.3, 10.93, 1.43, 8.32, 6.57, 11.53, 4.28, 2.26, 8.55, 5.15, 5.61, 12.0],
    [4.8, 10.37, 6.02, 3.9, 11.22, 20.62, 1.21, 14.63, 15.24, 6.87, 0.0, 11.43, 13.52, 2.39, 12.16, 12.34, 1.51, 12.88, 15.07, 9.89, 2.19, 11.78, 11.01, 3.63, 9.7, 13.41, 1.93, 12.05, 17.2],
    [4.89, 3.91, 6.09, 7.81, 4.34, 14.39, 9.68, 2.41, 9.56, 6.22, 11.43, 0.0, 8.84, 8.88, 6.92, 5.54, 12.74, 0.94, 10.39, 6.96, 13.41, 0.96, 6.39, 9.69, 4.91, 7.18, 9.11, 1.54, 10.4],
    [6.18, 8.48, 6.22, 9.04, 9.95, 8.5, 11.76, 8.01, 2.49, 9.37, 13.52, 8.84, 0.0, 11.88, 12.04, 2.29, 13.86, 7.46, 2.32, 9.12, 14.53, 9.01, 9.95, 11.68, 8.93, 10.16, 11.2, 7.36, 3.33],
    [5.55, 6.76, 6.77, 4.65, 6.42, 17.87, 1.23, 11.02, 13.61, 4.48, 2.39, 8.88, 11.88, 0.0, 9.62, 8.32, 2.4, 9.95, 12.53, 5.55, 3.63, 9.23, 13.97, 1.24, 7.15, 10.67, 0.67, 8.43, 14.45],
    [9.73, 5.89, 9.82, 8.8, 4.22, 17.71, 10.41, 8.04, 13.12, 4.88, 12.16, 6.92, 12.04, 9.62, 0.0, 9.39, 11.39, 6.98, 13.6, 4.24, 12.17, 6.82, 12.95, 8.45, 4.25, 10.51, 9.84, 6.39, 13.96],
    [3.53, 5.83, 3.57, 5.85, 7.3, 8.38, 9.11, 5.36, 4.01, 6.72, 12.34, 5.54, 2.29, 8.32, 9.39, 0.0, 11.57, 5.17, 4.21, 6.83, 12.24, 6.36, 7.29, 9.39, 6.64, 6.29, 8.55, 4.71, 4.86],
    [5.64, 9.6, 6.86, 4.74, 10.45, 19.85, 1.21, 13.86, 15.59, 7.65, 1.51, 12.74, 13.86, 2.4, 11.39, 11.57, 0.0, 12.8, 14.3, 9.12, 1.54, 13.55, 15.95, 3.64, 8.93, 12.64, 1.93, 11.28, 16.43],
    [5.48, 3.46, 5.74, 7.36, 5.8, 14.04, 11.13, 1.51, 9.18, 7.3, 12.88, 0.94, 7.46, 9.95, 6.98, 5.17, 12.8, 0.0, 9.96, 7.0, 13.47, 1.65, 5.8, 9.75, 4.97, 6.84, 10.56, 2.04, 10.03],
    [7.74, 10.03, 7.78, 10.6, 11.51, 8.99, 13.32, 9.56, 0.17, 10.93, 15.07, 10.39, 2.32, 12.53, 13.6, 4.21, 14.3, 9.96, 0.0, 10.63, 14.98, 9.93, 11.5, 13.14, 10.49, 10.65, 12.75, 8.92, 1.01],
    [7.45, 3.62, 7.54, 6.52, 1.99, 15.44, 6.78, 8.08, 10.84, 1.43, 9.89, 6.96, 9.12, 5.55, 4.24, 6.83, 9.12, 7.0, 10.63, 0.0, 9.38, 6.27, 11.22, 5.33, 1.96, 8.23, 6.22, 5.29, 11.69],
    [5.37, 10.28, 6.59, 4.47, 11.12, 20.52, 2.44, 14.53, 16.26, 8.32, 2.19, 13.41, 14.53, 3.63, 12.17, 12.24, 1.54, 13.47, 14.98, 9.38, 0.0, 14.23, 16.63, 4.88, 9.6, 13.32, 3.17, 11.95, 17.1],
    [5.21, 2.65, 7.19, 7.28, 4.69, 14.74, 10.02, 2.93, 10.1, 6.57, 11.78, 0.96, 9.01, 9.23, 6.82, 6.36, 13.55, 1.65, 9.93, 6.27, 14.23, 0.0, 7.2, 10.51, 5.74, 7.54, 9.46, 1.86, 10.94],
    [3.8, 6.03, 4.5, 6.53, 7.5, 10.36, 9.25, 5.56, 6.19, 11.53, 11.01, 6.39, 9.95, 13.97, 12.95, 7.29, 15.95, 5.8, 11.5, 11.22, 16.63, 7.2, 0.0, 13.77, 11.03, 2.26, 8.69, 4.92, 7.03],
    [7.62, 6.55, 8.01, 5.9, 6.21, 17.66, 2.48, 10.81, 13.4, 4.28, 3.63, 9.69, 11.68, 1.24, 8.45, 9.39, 3.64, 9.75, 13.14, 5.33, 4.88, 10.51, 13.77, 0.0, 6.17, 10.46, 1.91, 8.23, 14.24],
    [7.26, 3.43, 7.36, 6.33, 0.04, 11.45, 7.94, 6.04, 10.65, 2.26, 9.7, 4.91, 8.93, 7.15, 4.25, 6.64, 8.93, 4.97, 10.49, 1.96, 9.6, 5.74, 11.03, 6.17, 0.0, 8.05, 7.38, 5.1, 11.5],
    [5.17, 6.26, 5.21, 9.2, 8.09, 1.66, 11.42, 9.36, 10.82, 8.55, 13.41, 7.18, 10.16, 10.67, 10.51, 6.29, 12.64, 6.84, 10.65, 8.23, 13.32, 7.54, 2.26, 10.46, 8.05, 0.0, 12.33, 6.2, 10.78],
    [5.02, 7.46, 6.22, 4.2, 7.42, 12.73, 0.77, 10.16, 12.92, 5.15, 1.93, 9.11, 11.2, 0.67, 9.84, 8.55, 1.93, 10.56, 12.75, 6.22, 3.17, 9.46, 8.69, 1.91, 7.38, 12.33, 0.0, 9.48, 14.64],
    [3.36, 1.08, 5.25, 5.37, 5.15, 7.87, 10.05, 1.64, 9.09, 5.61, 12.05, 1.54, 7.36, 8.43, 6.39, 4.71, 11.28, 2.04, 8.92, 5.29, 11.95, 1.86, 4.92, 8.23, 5.1, 6.2, 9.48, 0.0, 9.19],
    [8.59, 9.71, 8.63, 11.53, 11.54, 6.52, 15.2, 10.09, 0.84, 12.0, 17.2, 10.4, 3.33, 14.45, 13.96, 4.86, 16.43, 10.03, 1.01, 11.69, 17.1, 10.94, 7.03, 14.24, 11.5, 10.78, 14.64, 9.19, 0.0]
]

dist_matrixes = [dist_matrix1, dist_matrix2, dist_matrix3]

# Définir les bus pour chaque instance
buses1 = [
    bus.Bus(id=0, capacity=40, cost_per_km=1.8, startup_cost=120),
    bus.Bus(id=1, capacity=50, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=2, capacity=20, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=3, capacity=50, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=4, capacity=20, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=5, capacity=40, cost_per_km=1.8, startup_cost=120),
    bus.Bus(id=6, capacity=50, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=7, capacity=20, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=8, capacity=50, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=9, capacity=20, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=10, capacity=40, cost_per_km=1.8, startup_cost=120),
    bus.Bus(id=11, capacity=50, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=12, capacity=20, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=13, capacity=50, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=14, capacity=20, cost_per_km=1.1, startup_cost=50)
]

buses2 = [
    bus.Bus(id=0, capacity=40, cost_per_km=1.8, startup_cost=100),
    bus.Bus(id=1, capacity=50, cost_per_km=2.5, startup_cost=100),
    bus.Bus(id=2, capacity=20, cost_per_km=1.1, startup_cost=100),
    bus.Bus(id=3, capacity=50, cost_per_km=2.5, startup_cost=100),
    bus.Bus(id=4, capacity=20, cost_per_km=1.1, startup_cost=100),
    bus.Bus(id=5, capacity=40, cost_per_km=1.8, startup_cost=100),
    bus.Bus(id=6, capacity=50, cost_per_km=2.5, startup_cost=100),
    bus.Bus(id=7, capacity=20, cost_per_km=1.1, startup_cost=100),
    bus.Bus(id=8, capacity=50, cost_per_km=2.5, startup_cost=100),
    bus.Bus(id=9, capacity=20, cost_per_km=1.1, startup_cost=100),
    bus.Bus(id=10, capacity=40, cost_per_km=1.8, startup_cost=100),
    bus.Bus(id=11, capacity=50, cost_per_km=2.5, startup_cost=100),
    bus.Bus(id=12, capacity=20, cost_per_km=1.1, startup_cost=100),
    bus.Bus(id=13, capacity=50, cost_per_km=2.5, startup_cost=100),
    bus.Bus(id=14, capacity=20, cost_per_km=1.1, startup_cost=100)
]

buses3 = [
    bus.Bus(id=0, capacity=25, cost_per_km=1.8, startup_cost=120),
    bus.Bus(id=1, capacity=35, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=2, capacity=55, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=3, capacity=35, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=4, capacity=55, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=5, capacity=25, cost_per_km=1.8, startup_cost=120),
    bus.Bus(id=6, capacity=35, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=7, capacity=55, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=8, capacity=35, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=9, capacity=55, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=10, capacity=25, cost_per_km=1.8, startup_cost=120),
    bus.Bus(id=11, capacity=35, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=12, capacity=55, cost_per_km=1.1, startup_cost=50),
    bus.Bus(id=13, capacity=35, cost_per_km=2.5, startup_cost=200),
    bus.Bus(id=14, capacity=55, cost_per_km=1.1, startup_cost=50)
]

buses = [buses1, buses2, buses3]

# Définir les lieux pour chaque instance
Lieux1 = ["Entreprise", "École", "Lieu1", "Lieu2", "Lieu3", "Lieu4", "Lieu5", "Lieu6", "Lieu7", "Lieu8", "Lieu9", "Lieu10", "Lieu11", "Lieu12", "Lieu13", "Lieu14", "Lieu15", "Lieu16", "Lieu17", "Lieu18", "Lieu19", "Lieu20", "Lieu21", "Lieu22", "Lieu23", "Lieu24", "Lieu25", "Lieu26", "Lieu27", "Lieu28"]
Lieux2 = ["Entreprise", "École", "Lieu1", "Lieu2", "Lieu3", "Lieu4", "Lieu5", "Lieu6", "Lieu7", "Lieu8", "Lieu9", "Lieu10", "Lieu11", "Lieu12", "Lieu13", "Lieu14", "Lieu15", "Lieu16", "Lieu17", "Lieu18", "Lieu19", "Lieu20", "Lieu21", "Lieu22", "Lieu23", "Lieu24", "Lieu25", "Lieu26", "Lieu27", "Lieu28"]
Lieux3 = ["Entreprise", "École", "Lieu1", "Lieu2", "Lieu3", "Lieu4", "Lieu5", "Lieu6", "Lieu7", "Lieu8", "Lieu9", "Lieu10", "Lieu11", "Lieu12", "Lieu13", "Lieu14", "Lieu15", "Lieu16", "Lieu17", "Lieu18", "Lieu19", "Lieu20", "Lieu21", "Lieu22", "Lieu23", "Lieu24", "Lieu25", "Lieu26", "Lieu27", "Lieu28"]

Lieux = [Lieux1, Lieux2, Lieux3]

# Définir le nombre d'étudiants pour chaque instance (convertir les chaînes en entiers)
nb_etudiant1 = [0, 0, 2, 18, 7, 19, 19, 20, 8, 19, 7, 2, 7, 16, 13, 16, 19, 2, 8, 15, 20, 11, 17, 3, 13, 16, 19, 18, 7, 5]
nb_etudiant2 = [0, 0, 1, 10, 8, 20, 6, 3, 6, 12, 15, 4, 17, 1, 15, 8, 13, 10, 12, 7, 18, 15, 17, 9, 15, 1, 13, 6, 15, 9]
nb_etudiant3 = [0, 0, 9, 15, 13, 9, 19, 12, 15, 14, 18, 6, 6, 8, 19, 2, 12, 13, 16, 20, 3, 6, 8, 19, 3, 19, 12, 16, 4, 14]

nb_etudiant = [nb_etudiant1, nb_etudiant2, nb_etudiant3]

# Définir les vitesses moyennes pour chaque instance
vitesse_moyenne1 = 40
vitesse_moyenne2 = 50 
vitesse_moyenne3 = 60


###Tester une instance###
problem = frp.FastRouteProb(dist_matrix1)
bus_fleet = bfleet.BusFleet(buses1, vitesse_moyenne1)
eleves_instance = élève.Eleves(nb_etudiant1)
solver = frp_solver.FrpAmplMipSolver()

# Résolution
result = solver.solve(problem, bus_fleet, eleves_instance)
route_instance = result["route"]

final_result = final.Final(result, problem, bus_fleet, eleves_instance, Lieux1)
final_result.afficher()

